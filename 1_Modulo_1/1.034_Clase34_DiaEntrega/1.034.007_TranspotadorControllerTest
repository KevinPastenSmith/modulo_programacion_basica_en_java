package controller;

import static org.junit.jupiter.api.Assertions.*;

import org.junit.jupiter.api.Test;


class TransportadorControllerTest {

	TransportadorController transportadorController = new TransportadorController();
	
	//1) Pruebas para definir el diametro de helice
	@Test
	void testDefinirDiametroHelice1() {
		double respuesta = transportadorController.definirDiametroHelice(30, "Homogénea");
		double respuestaEsperada = 360;
		assertEquals(respuestaEsperada, respuesta);
	}

	@Test
	void testDefinirDiametroHelice2() {
		double respuesta = transportadorController.definirDiametroHelice(30, "Heterogénea");
		double respuestaEsperada = 120;
		assertEquals(respuestaEsperada, respuesta);	
		
	}

	
	//2) pruebas para definir el diametro del tubo
	@Test
	void testDefinirDiametroTubo1() {
		double respuesta = transportadorController.definirDiametroTubo(152.4);
		double respuestaEsperada = 1.5;
		assertEquals(respuestaEsperada, respuesta);	
	}
	@Test
	void testDefinirDiametroTubo2() {
		double respuesta = transportadorController.definirDiametroTubo(304);
		double respuestaEsperada = 2;
		assertEquals(respuestaEsperada, respuesta);	
	}
	@Test
	void testDefinirDiametroTubo3() {
		double respuesta = transportadorController.definirDiametroTubo(380);
		double respuestaEsperada = 3;
		assertEquals(respuestaEsperada, respuesta);	
	}
	@Test
	void testDefinirDiametroTubo4() {
		double respuesta = transportadorController.definirDiametroTubo(508);
		double respuestaEsperada = 4;
		assertEquals(respuestaEsperada, respuesta);	
	}
	
	//3) pruebas para el sentido de giro del transportador
	@Test
	void testDefinirSentidoGiroTransportador1() {
		String respuesta = transportadorController.definirSentidoRotacionTransportador("Horario", "Abajo");
		String respuestaEsperada = "Anti-horario";
		assertEquals(respuestaEsperada, respuesta);
	}
	@Test
	void testDefinirSentidoGiroTransportador2() {
		String respuesta = transportadorController.definirSentidoRotacionTransportador("Horario", "Arriba");
		String respuestaEsperada = "Horario";
		assertEquals(respuestaEsperada, respuesta);
	}
	@Test
	void testDefinirSentidoGiroTransportador3() {
		String respuesta = transportadorController.definirSentidoRotacionTransportador("Anti-horario", "Abajo");
		String respuestaEsperada = "Horario";
		assertEquals(respuestaEsperada, respuesta);
	}
	@Test
	void testDefinirSentidoGiroTransportador4() {
		String respuesta = transportadorController.definirSentidoRotacionTransportador("Anti-horario", "Arriba");
		String respuestaEsperada = "Anti-horario";
		assertEquals(respuestaEsperada, respuesta);
	}
	
	
	
}
